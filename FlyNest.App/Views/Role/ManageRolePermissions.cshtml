@using FlyNest.Application.ViewModels.RolePermission;

@model ManageRolePermissionsViewModel

@{
    ViewData["Title"] = "Role Permissions";
    Layout = "~/Views/Shared/_Adminlte.cshtml";
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Permissions</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Permissions</li>
                </ol>
            </div>
        </div>
    </div>
</section>
<section class="content">
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h3 class="card-title mb-0">Manage Permissions for Role: <span class="badge badge-primary">@Model.RoleName</span></h3>
            <div class="card-tools">
                <form asp-action="ManageRolePermissions" method="get">
                    <div class="ml-2">
                        <p class="form-inline mb-0">
                            <label for="permissionValue" class="mr-2">Find by name:</label>
                            <input type="text" name="permissionValue" class="form-control mr-2" value="@Model.PermissionValue" />
                            <button type="submit" class="btn btn-default btn-sm mr-2">Search</button>
                            <input asp-for="RoleId" type="hidden" />
                            <a asp-action="Index" asp-route-roleId="@Model.RoleId" class="btn btn-link">Back to List</a>
                        </p>
                    </div>
                </form>
            </div>
           
        </div>

        <div class="card-body">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>
                            Type
                        </th>
                        <th>
                            Permission Name
                        </th>
                        <th>
                            Status
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < Model.ManagePermissionsViewModel.Count(); i++)
                    {
                        <tr>
                            <td id="claimType@(i)">
                                @Model.ManagePermissionsViewModel[i].Type
                            </td>
                            <td id="claimValue@(i)">
                                @Model.ManagePermissionsViewModel[i].Value
                            </td>
                            <td>
                                <div class="form-check m-1">
                                    <input asp-for="@Model.ManagePermissionsViewModel[i].Checked" class="form-check-input" id="checked@(i)" onchange="permissionChanged(@i)" />
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="card-footer pb-0">
            @{
                var prevDisabled = !Model.ManagePermissionsViewModel.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.ManagePermissionsViewModel.HasNextPage ? "disabled" : "";
            }
            <div class="row">
                <div class="col">
                    <ul class="pagination float-right">
                        <li>
                            <a asp-action="ManageRolePermissions"
                               asp-route-roleId="@Model.RoleId"
                               asp-route-pageNumber="@(Model.ManagePermissionsViewModel.PageIndex - 1)"
                               class="btn btn-default btn-sm @prevDisabled">
                                Previous
                            </a>
                        </li>
                        @for (var i = 1; i <= Model.ManagePermissionsViewModel.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.ManagePermissionsViewModel.PageIndex ? "active" : "")" style="z-index: 0;">
                                <a asp-action="ManageRolePermissions"
                                   asp-route-roleId="@Model.RoleId"
                                   asp-route-pageNumber="@i"
                                   class="page-link btn btn-sm">@i</a>
                            </li>
                        }
                        <li>
                            <a asp-action="ManageRolePermissions"
                               asp-route-roleId="@Model.RoleId"
                               asp-route-pageNumber="@(Model.ManagePermissionsViewModel.PageIndex + 1)"
                               class="btn btn-default btn-sm @nextDisabled">
                                Next
                            </a>
                        </li>
                    </ul>
                </div>
            </div>

        </div>
    </div>
</section>

@section Scripts
{
    <script>
        var roleId = '@Model.RoleId';
        var roleName = '@Model.RoleName';
        function permissionChanged(i) {
            $.ajax(
                {
                    type: "POST",
                    url: "/Role/ManageRoleClaims",
                    data: {
                        RoleId: roleId,
                        RoleName: roleName,
                        Type: document.getElementById("claimType" + i).innerHTML.trim(),
                        Value: document.getElementById("claimValue" + i).innerHTML.trim(),
                        Checked: document.getElementById("checked" + i).checked
                    },
                    success: function(response) {
                        if (response != null) {
                            if (response.succeeded === true) {
                                Swal.fire({
                                    title: 'Succeeded',
                                    text: response.message,
                                    icon: 'success'
                                });
                            } else {
                                Swal.fire({
                                    title: 'Failed',
                                    text: response.message,
                                    icon: 'error'
                                });
                                document.getElementById("checked" + i).checked = !document.getElementById("checked" + i).checked;
                            }
                        } else {
                            Swal.fire({
                                title: 'Failed',
                                text: "Something went wrong",
                                icon: 'error'
                            });
                            document.getElementById("checked" + i).checked = !document.getElementById("checked" + i).checked;
                        }
                    },
                    failure: function(response) {
                        alert(response.responseText);
                        document.getElementById("checked" + i).checked = !document.getElementById("checked" + i).checked;
                    },
                    error: function(response) {
                        alert(response.responseText);
                        document.getElementById("checked" + i).checked = !document.getElementById("checked" + i).checked;
                    }
                });
        }
    </script>
}